{{- $fullName := include "rabbitmq.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
spec:
  serviceName: {{ $fullName }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "rabbitmq.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rabbitmq.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.env }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        - name: tcp-amqp
          containerPort: {{ .Values.service.amqpPort }}
          protocol: TCP
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        volumeMounts:
        - name: rabbitmq-lib
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-lib
        hostPath:
          path: /var/lib/rabbitmq
